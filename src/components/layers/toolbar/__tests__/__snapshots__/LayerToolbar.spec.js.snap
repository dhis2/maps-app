// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`LayerToolbar Should match toolbar snapshot WITH Edit button 1`] = `
ShallowWrapper {
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <LayerToolbar
    classes={Object {}}
    isVisible={true}
    onEdit={[Function]}
    onOpacityChange={[Function]}
    opacity={0}
    toggleLayerVisibility={[Function]}
  />,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateError": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "class",
    "props": Object {
      "children": Array [
        <WithStyles(Tooltip)
          title="Edit"
        >
          <WithStyles(IconButton)
            className={undefined}
            onClick={[Function]}
          >
            <pure(CreateIcon) />
          </WithStyles(IconButton)>
        </WithStyles(Tooltip)>,
        <WithStyles(Tooltip)
          title="Toggle visibility"
        >
          <WithStyles(IconButton)
            className={undefined}
            onClick={[Function]}
          >
            <pure(VisibilityIcon) />
          </WithStyles(IconButton)>
        </WithStyles(Tooltip)>,
        <WithStyles(Tooltip)
          title="Set layer opacity"
        >
          <div>
            <WithStyles(OpacitySlider)
              onChange={[Function]}
              opacity={0}
            />
          </div>
        </WithStyles(Tooltip)>,
        <WithStyles(LayerToolbarMoreMenu)
          classes={
            Object {
              "button": undefined,
            }
          }
          onEdit={[Function]}
        />,
      ],
      "className": undefined,
    },
    "ref": null,
    "rendered": Array [
      Object {
        "instance": null,
        "key": "edit",
        "nodeType": "class",
        "props": Object {
          "children": <WithStyles(IconButton)
            className={undefined}
            onClick={[Function]}
          >
            <pure(CreateIcon) />
          </WithStyles(IconButton)>,
          "title": "Edit",
        },
        "ref": null,
        "rendered": Object {
          "instance": null,
          "key": undefined,
          "nodeType": "class",
          "props": Object {
            "children": <pure(CreateIcon) />,
            "className": undefined,
            "onClick": [Function],
          },
          "ref": null,
          "rendered": Object {
            "instance": null,
            "key": undefined,
            "nodeType": "class",
            "props": Object {},
            "ref": null,
            "rendered": null,
            "type": [Function],
          },
          "type": [Function],
        },
        "type": [Function],
      },
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "class",
        "props": Object {
          "children": <WithStyles(IconButton)
            className={undefined}
            onClick={[Function]}
          >
            <pure(VisibilityIcon) />
          </WithStyles(IconButton)>,
          "title": "Toggle visibility",
        },
        "ref": null,
        "rendered": Object {
          "instance": null,
          "key": undefined,
          "nodeType": "class",
          "props": Object {
            "children": <pure(VisibilityIcon) />,
            "className": undefined,
            "onClick": [Function],
          },
          "ref": null,
          "rendered": Object {
            "instance": null,
            "key": undefined,
            "nodeType": "class",
            "props": Object {},
            "ref": null,
            "rendered": null,
            "type": [Function],
          },
          "type": [Function],
        },
        "type": [Function],
      },
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "class",
        "props": Object {
          "children": <div>
            <WithStyles(OpacitySlider)
              onChange={[Function]}
              opacity={0}
            />
          </div>,
          "title": "Set layer opacity",
        },
        "ref": null,
        "rendered": Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": <WithStyles(OpacitySlider)
              onChange={[Function]}
              opacity={0}
            />,
          },
          "ref": null,
          "rendered": Object {
            "instance": null,
            "key": undefined,
            "nodeType": "class",
            "props": Object {
              "onChange": [Function],
              "opacity": 0,
            },
            "ref": null,
            "rendered": null,
            "type": [Function],
          },
          "type": "div",
        },
        "type": [Function],
      },
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "class",
        "props": Object {
          "classes": Object {
            "button": undefined,
          },
          "onEdit": [Function],
        },
        "ref": null,
        "rendered": null,
        "type": [Function],
      },
    ],
    "type": [Function],
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "class",
      "props": Object {
        "children": Array [
          <WithStyles(Tooltip)
            title="Edit"
          >
            <WithStyles(IconButton)
              className={undefined}
              onClick={[Function]}
            >
              <pure(CreateIcon) />
            </WithStyles(IconButton)>
          </WithStyles(Tooltip)>,
          <WithStyles(Tooltip)
            title="Toggle visibility"
          >
            <WithStyles(IconButton)
              className={undefined}
              onClick={[Function]}
            >
              <pure(VisibilityIcon) />
            </WithStyles(IconButton)>
          </WithStyles(Tooltip)>,
          <WithStyles(Tooltip)
            title="Set layer opacity"
          >
            <div>
              <WithStyles(OpacitySlider)
                onChange={[Function]}
                opacity={0}
              />
            </div>
          </WithStyles(Tooltip)>,
          <WithStyles(LayerToolbarMoreMenu)
            classes={
              Object {
                "button": undefined,
              }
            }
            onEdit={[Function]}
          />,
        ],
        "className": undefined,
      },
      "ref": null,
      "rendered": Array [
        Object {
          "instance": null,
          "key": "edit",
          "nodeType": "class",
          "props": Object {
            "children": <WithStyles(IconButton)
              className={undefined}
              onClick={[Function]}
            >
              <pure(CreateIcon) />
            </WithStyles(IconButton)>,
            "title": "Edit",
          },
          "ref": null,
          "rendered": Object {
            "instance": null,
            "key": undefined,
            "nodeType": "class",
            "props": Object {
              "children": <pure(CreateIcon) />,
              "className": undefined,
              "onClick": [Function],
            },
            "ref": null,
            "rendered": Object {
              "instance": null,
              "key": undefined,
              "nodeType": "class",
              "props": Object {},
              "ref": null,
              "rendered": null,
              "type": [Function],
            },
            "type": [Function],
          },
          "type": [Function],
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "class",
          "props": Object {
            "children": <WithStyles(IconButton)
              className={undefined}
              onClick={[Function]}
            >
              <pure(VisibilityIcon) />
            </WithStyles(IconButton)>,
            "title": "Toggle visibility",
          },
          "ref": null,
          "rendered": Object {
            "instance": null,
            "key": undefined,
            "nodeType": "class",
            "props": Object {
              "children": <pure(VisibilityIcon) />,
              "className": undefined,
              "onClick": [Function],
            },
            "ref": null,
            "rendered": Object {
              "instance": null,
              "key": undefined,
              "nodeType": "class",
              "props": Object {},
              "ref": null,
              "rendered": null,
              "type": [Function],
            },
            "type": [Function],
          },
          "type": [Function],
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "class",
          "props": Object {
            "children": <div>
              <WithStyles(OpacitySlider)
                onChange={[Function]}
                opacity={0}
              />
            </div>,
            "title": "Set layer opacity",
          },
          "ref": null,
          "rendered": Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "children": <WithStyles(OpacitySlider)
                onChange={[Function]}
                opacity={0}
              />,
            },
            "ref": null,
            "rendered": Object {
              "instance": null,
              "key": undefined,
              "nodeType": "class",
              "props": Object {
                "onChange": [Function],
                "opacity": 0,
              },
              "ref": null,
              "rendered": null,
              "type": [Function],
            },
            "type": "div",
          },
          "type": [Function],
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "class",
          "props": Object {
            "classes": Object {
              "button": undefined,
            },
            "onEdit": [Function],
          },
          "ref": null,
          "rendered": null,
          "type": [Function],
        },
      ],
      "type": [Function],
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
        "lifecycles": Object {
          "componentDidUpdate": Object {
            "onSetState": true,
          },
          "getDerivedStateFromProps": true,
          "getSnapshotBeforeUpdate": true,
          "setState": Object {
            "skipsComponentDidUpdateOnNullish": true,
          },
        },
      },
    },
    "attachTo": undefined,
    "hydrateIn": undefined,
  },
}
`;

exports[`LayerToolbar Should match toolbar snapshot without Edit button 1`] = `
ShallowWrapper {
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <LayerToolbar
    classes={Object {}}
    isVisible={true}
    onOpacityChange={[Function]}
    opacity={0}
    toggleLayerVisibility={[Function]}
  />,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateError": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "class",
    "props": Object {
      "children": Array [
        undefined,
        <WithStyles(Tooltip)
          title="Toggle visibility"
        >
          <WithStyles(IconButton)
            className={undefined}
            onClick={[Function]}
          >
            <pure(VisibilityIcon) />
          </WithStyles(IconButton)>
        </WithStyles(Tooltip)>,
        <WithStyles(Tooltip)
          title="Set layer opacity"
        >
          <div>
            <WithStyles(OpacitySlider)
              onChange={[Function]}
              opacity={0}
            />
          </div>
        </WithStyles(Tooltip)>,
        <WithStyles(LayerToolbarMoreMenu)
          classes={
            Object {
              "button": undefined,
            }
          }
        />,
      ],
      "className": undefined,
    },
    "ref": null,
    "rendered": Array [
      undefined,
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "class",
        "props": Object {
          "children": <WithStyles(IconButton)
            className={undefined}
            onClick={[Function]}
          >
            <pure(VisibilityIcon) />
          </WithStyles(IconButton)>,
          "title": "Toggle visibility",
        },
        "ref": null,
        "rendered": Object {
          "instance": null,
          "key": undefined,
          "nodeType": "class",
          "props": Object {
            "children": <pure(VisibilityIcon) />,
            "className": undefined,
            "onClick": [Function],
          },
          "ref": null,
          "rendered": Object {
            "instance": null,
            "key": undefined,
            "nodeType": "class",
            "props": Object {},
            "ref": null,
            "rendered": null,
            "type": [Function],
          },
          "type": [Function],
        },
        "type": [Function],
      },
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "class",
        "props": Object {
          "children": <div>
            <WithStyles(OpacitySlider)
              onChange={[Function]}
              opacity={0}
            />
          </div>,
          "title": "Set layer opacity",
        },
        "ref": null,
        "rendered": Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": <WithStyles(OpacitySlider)
              onChange={[Function]}
              opacity={0}
            />,
          },
          "ref": null,
          "rendered": Object {
            "instance": null,
            "key": undefined,
            "nodeType": "class",
            "props": Object {
              "onChange": [Function],
              "opacity": 0,
            },
            "ref": null,
            "rendered": null,
            "type": [Function],
          },
          "type": "div",
        },
        "type": [Function],
      },
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "class",
        "props": Object {
          "classes": Object {
            "button": undefined,
          },
        },
        "ref": null,
        "rendered": null,
        "type": [Function],
      },
    ],
    "type": [Function],
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "class",
      "props": Object {
        "children": Array [
          undefined,
          <WithStyles(Tooltip)
            title="Toggle visibility"
          >
            <WithStyles(IconButton)
              className={undefined}
              onClick={[Function]}
            >
              <pure(VisibilityIcon) />
            </WithStyles(IconButton)>
          </WithStyles(Tooltip)>,
          <WithStyles(Tooltip)
            title="Set layer opacity"
          >
            <div>
              <WithStyles(OpacitySlider)
                onChange={[Function]}
                opacity={0}
              />
            </div>
          </WithStyles(Tooltip)>,
          <WithStyles(LayerToolbarMoreMenu)
            classes={
              Object {
                "button": undefined,
              }
            }
          />,
        ],
        "className": undefined,
      },
      "ref": null,
      "rendered": Array [
        undefined,
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "class",
          "props": Object {
            "children": <WithStyles(IconButton)
              className={undefined}
              onClick={[Function]}
            >
              <pure(VisibilityIcon) />
            </WithStyles(IconButton)>,
            "title": "Toggle visibility",
          },
          "ref": null,
          "rendered": Object {
            "instance": null,
            "key": undefined,
            "nodeType": "class",
            "props": Object {
              "children": <pure(VisibilityIcon) />,
              "className": undefined,
              "onClick": [Function],
            },
            "ref": null,
            "rendered": Object {
              "instance": null,
              "key": undefined,
              "nodeType": "class",
              "props": Object {},
              "ref": null,
              "rendered": null,
              "type": [Function],
            },
            "type": [Function],
          },
          "type": [Function],
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "class",
          "props": Object {
            "children": <div>
              <WithStyles(OpacitySlider)
                onChange={[Function]}
                opacity={0}
              />
            </div>,
            "title": "Set layer opacity",
          },
          "ref": null,
          "rendered": Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "children": <WithStyles(OpacitySlider)
                onChange={[Function]}
                opacity={0}
              />,
            },
            "ref": null,
            "rendered": Object {
              "instance": null,
              "key": undefined,
              "nodeType": "class",
              "props": Object {
                "onChange": [Function],
                "opacity": 0,
              },
              "ref": null,
              "rendered": null,
              "type": [Function],
            },
            "type": "div",
          },
          "type": [Function],
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "class",
          "props": Object {
            "classes": Object {
              "button": undefined,
            },
          },
          "ref": null,
          "rendered": null,
          "type": [Function],
        },
      ],
      "type": [Function],
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
        "lifecycles": Object {
          "componentDidUpdate": Object {
            "onSetState": true,
          },
          "getDerivedStateFromProps": true,
          "getSnapshotBeforeUpdate": true,
          "setState": Object {
            "skipsComponentDidUpdateOnNullish": true,
          },
        },
      },
    },
    "attachTo": undefined,
    "hydrateIn": undefined,
  },
}
`;
