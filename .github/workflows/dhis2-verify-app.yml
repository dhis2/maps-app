name: 'dhis2: verify (app)'

on:
    push:
        branches:

env:
    GIT_AUTHOR_NAME: '@dhis2-bot'
    GIT_AUTHOR_EMAIL: 'apps@dhis2.org'
    GIT_COMMITTER_NAME: '@dhis2-bot'
    GIT_COMMITTER_EMAIL: 'apps@dhis2.org'
    GH_TOKEN: ${{secrets.DHIS2_BOT_GITHUB_TOKEN}}
    CI: true

jobs:
    install:
        runs-on: ubuntu-latest
        if: "!contains(github.event.head_commit.message, '[skip ci]')"

        steps:
            - uses: actions/checkout@v2
            - uses: actions/setup-node@v3
              with:
                  node-version: 18.x

            - uses: actions/cache@v2
              id: yarn-cache # use this to check for `cache-hit` (`steps.yarn-cache.outputs.cache-hit != 'true'`)
              with:
                  path: '**/node_modules'
                  key: ${{ runner.os }}-yarn-${{ hashFiles('**/yarn.lock') }}

            - name: Install
              if: steps.yarn-cache.outputs.cache-hit != 'true'
              run: yarn install --frozen-lockfile

    build:
        runs-on: ubuntu-latest
        needs: install
        if: "!contains(github.event.head_commit.message, '[skip ci]')"
        steps:
            - uses: actions/checkout@v2
            - uses: actions/setup-node@v3
              with:
                  node-version: 18.x

            - uses: actions/cache@v2
              id: yarn-cache
              with:
                  path: '**/node_modules'
                  key: ${{ runner.os }}-yarn-${{ hashFiles('**/yarn.lock') }}

            - name: Build
              run: yarn build

            - uses: actions/upload-artifact@v2
              with:
                  name: app-build
                  path: |
                      **/build
                      !**/node_modules
                  retention-days: 1

    lint:
        runs-on: ubuntu-latest
        needs: install
        if: "!contains(github.event.head_commit.message, '[skip ci]')"
        steps:
            - uses: actions/checkout@v2
            - uses: actions/setup-node@v3
              with:
                  node-version: 18.x

            - uses: actions/cache@v2
              id: yarn-cache
              with:
                  path: '**/node_modules'
                  key: ${{ runner.os }}-yarn-${{ hashFiles('**/yarn.lock') }}

            - name: Generate translations
              run: yarn d2-app-scripts i18n generate

            - name: Lint
              run: yarn lint

    test:
        runs-on: ubuntu-latest
        needs: install
        if: "!contains(github.event.head_commit.message, '[skip ci]')"
        steps:
            - uses: actions/checkout@v2
            - uses: actions/setup-node@v3
              with:
                  node-version: 18.x

            - uses: actions/cache@v2
              id: yarn-cache
              with:
                  path: '**/node_modules'
                  key: ${{ runner.os }}-yarn-${{ hashFiles('**/yarn.lock') }}

            - name: Test
              run: yarn test

    e2e:
        needs: install
        runs-on: ubuntu-latest
        container:
            image: cypress/browsers:node16.17.0-chrome106
            options: --user 1001
        if: "!contains(github.event.head_commit.message, '[skip ci]')"

        strategy:
            matrix:
                containers: [1, 2, 3, 4]

        steps:
            - name: Checkout
              uses: actions/checkout@v3

            - uses: actions/setup-node@v3
              with:
                  node-version: 18.x

            - uses: actions/cache@v2
              id: yarn-cache
              with:
                  path: '**/node_modules'
                  key: ${{ runner.os }}-yarn-${{ hashFiles('**/yarn.lock') }}

            - name: Install Cypress binary
              run: yarn cypress install

            - name: End-to-End tests
              uses: cypress-io/github-action@v2
              with:
                  start: yarn d2-app-scripts start
                  wait-on: 'http://localhost:3000'
                  wait-on-timeout: 300
                  record: true
                  parallel: true
                  browser: chrome
                  group: 'e2e'
                  tag: ${{ github.event_name }}
              env:
                  CI: true
                  BROWSER: none
                  CYPRESS_RECORD_KEY: ${{ secrets.CYPRESS_RECORD_KEY }}
                  COMMIT_INFO_MESSAGE: ${{ github.event.pull_request.title }}
                  CYPRESS_dhis2BaseUrl: ${{ secrets.CYPRESS_DHIS2_BASE_URL_40 }}
                  CYPRESS_dhis2Username: ${{ secrets.CYPRESS_DHIS2_USERNAME }}
                  CYPRESS_dhis2Password: ${{ secrets.CYPRESS_DHIS2_PASSWORD }}
                  CYPRESS_networkMode: 'live'
                  GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

    publish:
        runs-on: ubuntu-latest
        needs: [build, lint, test]
        if: "!contains(github.event.head_commit.message, '[skip ci]')"
        steps:
            - uses: actions/checkout@v2
              with:
                  token: ${{env.GH_TOKEN}}

            - uses: actions/setup-node@v1
              with:
                  node-version: 14.x

            - uses: actions/download-artifact@v2
              with:
                  name: app-build

            - uses: dhis2/deploy-build@master
              with:
                  build-dir: build/app
                  github-token: ${{ env.GH_TOKEN }}

    release:
        runs-on: ubuntu-latest
        needs: [publish]
        if: "github.event_name == 'push' && !contains(github.event.head_commit.message, '[skip ci]')"
        steps:
            - uses: actions/checkout@v2
              with:
                  token: ${{env.GH_TOKEN}}

            - uses: actions/setup-node@v1
              with:
                  node-version: 14.x

            - name: Publish release to GitHub
              run: npx @dhis2/cli-utils release
