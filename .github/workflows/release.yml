name: 'release app'

on:
    push:
        branches:
            - 'master'
            - 'chore/new-gh-workflows'

env:
    GIT_AUTHOR_NAME: '@dhis2-bot'
    GIT_AUTHOR_EMAIL: 'apps@dhis2.org'
    GIT_COMMITTER_NAME: '@dhis2-bot'
    GIT_COMMITTER_EMAIL: 'apps@dhis2.org'
    GH_TOKEN: ${{secrets.DHIS2_BOT_GITHUB_TOKEN}}
    D2_APP_HUB_TOKEN: ${{secrets.DHIS2_BOT_APPHUB_TOKEN}}
    CI: true

jobs:
    setup-matrix:
        if: ${{ !contains(github.event.head_commit.message, '[skip release]') }}
        runs-on: ubuntu-latest
        outputs:
            matrix: ${{ steps.set-matrix.outputs.specs }}
        steps:
            - uses: actions/checkout@v3
            - name: Generate Test matrix
              id: set-matrix
              run: echo "::set-output name=specs::$(node cypress/support/generateTestMatrix.js)"

    build:
        if: ${{ !contains(github.event.head_commit.message, '[skip release]') }}
        runs-on: ubuntu-latest
        steps:
            - uses: actions/checkout@v3
            - uses: actions/setup-node@v3
              with:
                  node-version: 18.x

            - name: Install
              run: yarn install --frozen-lockfile

            - name: Build
              run: yarn d2-app-scripts build

    lint:
        if: ${{ !contains(github.event.head_commit.message, '[skip release]') }}
        runs-on: ubuntu-latest
        steps:
            - uses: actions/checkout@v3
            - uses: actions/setup-node@v3
              with:
                  node-version: 18.x

            - name: Install
              run: yarn install --frozen-lockfile

            - name: Generate translations
              run: yarn d2-app-scripts i18n generate

            - name: Lint
              run: yarn d2-style check

    # test:
    #     if: ${{ !contains(github.event.head_commit.message, '[skip release]') }}
    #     runs-on: ubuntu-latest
    #     steps:
    #         - uses: actions/checkout@v3
    #         - uses: actions/setup-node@v3
    #           with:
    #               node-version: 18.x

    #         - name: Install
    #           run: yarn install --frozen-lockfile

    #         - name: Generate translations
    #           run: yarn d2-app-scripts i18n generate

    #         - name: Test
    #           run: yarn d2-app-scripts test
    #           env:
    #               REPORTPORTAL_API_KEY: ${{ secrets.REPORTPORTAL_API_KEY }}
    #               REPORTPORTAL_ENDPOINT: ${{ vars.REPORTPORTAL_ENDPOINT }}
    #               REPORTPORTAL_PROJECT: ${{ vars.REPORTPORTAL_PROJECT }}
    #               CI_BUILD_ID: ${{ github.sha }}-${{ github.workflow }}-${{ github.event_name }}
    #               BRANCH_NAME: ${{ github.head_ref || github.ref_name }}
    #               PR_TITLE: ${{ format('Direct push to {0}', github.ref_name) }}

    # call-workflow-e2e-prod:
    #     if: ${{ !contains(github.event.head_commit.message, '[skip ci]') }}
    #     needs: [build, lint, test, setup-matrix]
    #     uses: dhis2/workflows/.github/workflows/analytics-e2e-tests-prod.yml@master
    #     with:
    #         should_record: ${{ contains(github.event.head_commit.message, '[e2e record]') }}
    #         spec-group: ${{ needs.setup-matrix.outputs.matrix }}
    #     secrets:
    #         username: ${{ secrets.CYPRESS_DHIS2_USERNAME }}
    #         password: ${{ secrets.CYPRESS_DHIS2_PASSWORD }}
    #         recordkey: ${{ secrets.CYPRESS_RECORD_KEY }}
    #         reportportal_api_key: ${{ secrets.REPORTPORTAL_API_KEY }}
    #         reportportal_endpoint: ${{ vars.REPORTPORTAL_ENDPOINT }}
    #         reportportal_project: ${{ vars.REPORTPORTAL_PROJECT }}

    # release:
    #     runs-on: ubuntu-latest
    #     needs: call-workflow-e2e-prod
    #     if: ${{ !github.event.push.repository.fork && github.actor != 'dependabot[bot]' }}
    #     steps:
    #         - uses: actions/checkout@v3
    #           with:
    #               token: ${{ secrets.DHIS2_BOT_GITHUB_TOKEN }}

    #         - uses: actions/setup-node@v3
    #           with:
    #               node-version: 18.x

    #         - name: Install
    #           run: yarn install --frozen-lockfile

    #         - name: Run Semantic Release
    #           run: npx semantic-release
    #           env:
    #               GITHUB_TOKEN: ${{ secrets.DHIS2_BOT_GITHUB_TOKEN }}

    #         - name: Publish to AppHub
    #           run: yarn run d2-app-scripts publish

    report-release-result:
        runs-on: ubuntu-latest
        needs: lint
        steps:
            - name: Checkout code
              uses: actions/checkout@master

            - name: Extract version
              if: success()
              id: extract_version
              uses: Saionaro/extract-package-version@v1.2.1

            - name: Send success message to analytics-internal-bot slack channel
              if: success()
              id: slack_success
              uses: slackapi/slack-github-action@v1.23.0
              with:
                  channel-id: ${{ secrets.SLACK_CHANNEL_ID }}
                  payload: |
                      {
                        "text": "Maps app release ${{ steps.extract_version.outputs.version }} succeeded",
                        "blocks": [
                          {
                            "type": "header",
                            "text": {
                                "type": "plain_text",
                                "text": ":large_green_circle: :maps-app: Maps version ${{ steps.extract_version.outputs.version }} released :tada:",
                                "emoji": true
                            }
                          },
                          {
                            "type": "divider"
                          },
                          {
                            "type": "section",
                            "text": {
                                "type": "mrkdwn",
                                "text": "*Release Notes*"
                            }
                          },
                            {
                              "type": "section",
                              "text": {
                                "type": "mrkdwn",
                                "text": ${{ toJSON(github.event.head_commit.message) }}
                              }
                            },
                            {
                              "type": "divider"
                            },
                            {
                              "type": "section",
                              "text": {
                                "type": "mrkdwn",
                                "text": "Link to <https://github.com/dhis2/maps-app/actions/workflows/dhis2-verify-app.yml?query=branch%3Amaster+is%3Asuccess|build>"
                              }
                            }
                          ]
                      }
              env:
                  SLACK_BOT_TOKEN: ${{ secrets.SLACK_BOT_TOKEN }}

            - name: Send failure message to analytics-internal-bot slack channel
              if: ${{ failure() && !cancelled() }}
              id: slack_failure
              uses: slackapi/slack-github-action@v1.23.0
              with:
                  channel-id: ${{ secrets.SLACK_CHANNEL_ID }}
                  payload: |
                      {
                          "text": ":small_red_triangle_down: :maps-app: Maps release <https://github.com/dhis2/maps-app/actions/workflows/dhis2-verify-app.yml?query=branch%3Amaster+is%3Afailure|failed>",
                          "blocks": [
                            {
                              "type": "section",
                              "text": {
                                "type": "mrkdwn",
                                "text": ":small_red_triangle_down: :maps-app: Maps release <https://github.com/dhis2/maps-app/actions/workflows/dhis2-verify-app.yml?query=branch%3Amaster+is%3Afailure|failed>"
                              }
                            }
                          ]
                      }
              env:
                  SLACK_BOT_TOKEN: ${{ secrets.SLACK_BOT_TOKEN }}
